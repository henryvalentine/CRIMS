@model IEnumerable<Crims.Data.Models.CustomListViewModel>

@{
    ViewBag.Title = "Custom List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="content-header">
    <h1>Manage Custom Lists</h1>
    <hr />
</section>
<section class="content">
    <table class="table table-striped table-bordered" style="width: 100%" id="TableListx">
        <thead style="background-color: #88be4c">
        <tr style="color: #ddd">
            <th>S/N</th>
            <th>List Name </th>
            <th>Parent List Name </th>
            <th>Action</th>
        </tr>
        </thead>
        <tbody>
         
        </tbody>
    </table>
</section>

<!--Process-->
<div class="modal fade" id="new_modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" id="process_modal_body">
        </div>
    </div>
</div>
@section JavaScript
{
    <script type="text/javascript">
        var listOptions = '<option value="">-- Select option --</option>';
        var jtable = {};
        var baseUrl = '@Url.Content("~")'.replace(/\/$/, '');
        $(document).ready(function ()
        {
            var tableOptions = {};
            tableOptions.sourceUrl = baseUrl + "/CustomList/GetLists";
            tableOptions.itemId = 'CustomListId';
            tableOptions.columnHeaders = ['CustomListName', 'ParentListName'];
            var ttc = allTableManager(baseUrl, $('#TableListx'), tableOptions, 'addNewItem', 'editCustomList', 'deleteCustomList', 'New Custom List');
            ttc.removeAttr('width').attr('width', 'auto');
            jtable = ttc;

            //pre-fetch customlists to use as parent lists
            getCustomLists();
            
        });
        function addNewItem() {
            initList();
            $("#process_modal_body").load(baseUrl + '/CustomList/GetView', function ()
            {
                $("#myModalLabel").html('Create Custom List');
                $("#ParentListId").html(listOptions);
            });

        }
        function initList()
        {
            window.customListScope = { TableId: 0, CustomListName: '', ParentListId: '', CustomListId: window.generateUid().toUpperCase() };
        }
        function editCustomList(itemId)
        {
            //var itemId = $(this).data("edit-id");
            if (!itemId || itemId.length < 1)
            {
                alert('Invalid selection');
                return;
            }

            $('.showBusy').fadeIn();

            $.ajax({
                url: baseUrl + '/CustomList/GetCustomList?id=' + itemId,
                contentType: "application/json",
                dataType: 'json',
                type: 'GET',
                success: function (response)
                {
                    $('.showBusy').fadeOut();
                    if (!response || response.TableId < 1)
                    {
                        alert('Custom List information could not be retrieved. Please try again or contact Support team');
                        return;
                    }
                    initList();
                    $("#process_modal_body").load(baseUrl + '/CustomList/GetView', function ()
                    {
                        window.customListScope = response;
                        $("#ParentListId").html(listOptions);
                        $("#ParentListId").val(window.customListScope.ParentListId);
                        $("#myModalLabel").html('Update Custom List');
                        $("#CustomListName").val(response.CustomListName);
                        $("#tableId").val(response.TableId);
                    });
                }
            });

        }
        function deleteCustomList (itemId)
        {
            //var itemId = $(this).data("delete-id");
            if (!itemId || itemId.length < 1) {
                alert('Invalid selection');
                return;
            }

            var xhr = $.ajax({
                url: baseUrl + '/CustomList/DeleteCustomList?customListId=' + itemId,
                contentType: "application/json",
                dataType: 'json',
                type: 'POST',
                beforeSend: function () {
                    var confirmStatus = confirm('Do you want to delete this item?');
                    if (confirmStatus === false) {
                        xhr.abort();
                        return;
                    }
                    $('.showBusy').fadeIn();
                },
                success: function (response)
                {
                    $('.showBusy').fadeOut();
                    alert(response.Message);
                    if (!response || response.Code < 1)
                    {
                        return;
                    }
                    jtable.fnClearTable();
                    closeView();
                }
            });
        }
        function processCustomList()
        {
            window.customListScope.CustomListName = $("#CustomListName").val();
            window.customListScope.ParentListId = $("#ParentListId").val();
            if (window.customListScope.ParentListId === undefined ||
                window.customListScope.ParentListId === null ||
                window.customListScope.ParentListId.length < 1 ||
                window.customListScope.ParentListId === "0" ||
                window.customListScope.ParentListId === " ") {
                window.customListScope.ParentListId = null;
            }
            $('.showBusy').fadeIn();
            var newList = false;
            var url = '';
            if (window.customListScope.TableId > 0)
            {
                url = baseUrl + '/CustomList/EditCustomList';
            }
            else
            {
               
                newList = true;
                url = baseUrl + '/CustomList/CreateCustomList';
            }
            $.ajax({
                url: url,
                contentType: "application/json",
                dataType: 'json',
                data: JSON.stringify({ customList: window.customListScope }),
                type: 'POST',
                success: function (response)
                {
                    $('.showBusy').fadeOut();
                    alert(response.Message);

                    if (!response || response.Code < 1)
                    {
                        return;
                    }
                    if (newList === true)
                    {
                        listOptions += '<option value="' + response.ResponseId + '">' + window.customListScope.CustomListName + '</option>';
                    }
                    jtable.fnClearTable();
                    closeView();
                }
            });
        }
        function getCustomLists()
        {
            $.ajax({
                url: baseUrl + '/Project/GetCustomLists',
                contentType: "application/json",
                dataType: 'json',
                type: 'GET',
                success: function (response)
                {
                    if (response.length > 0)
                    {
                        $.each(response, function (i, list)
                        {
                            listOptions += '<option value="' + list.CustomListId + '">' + list.CustomListName + '</option>';
                        });
                    }
                }
            });
        }
        function closeView() {
            $('#new_modal').modal('hide');
            $('#ParentListId').val('');
            $("#CustomListName").val('');
        }
</script>
}
